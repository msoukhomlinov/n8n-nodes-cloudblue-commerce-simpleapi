quality_objectives:
  - Test coverage targets:
      unit_tests: 80%
      integration_tests: 70%
      e2e_tests: 60%
  - Security requirements:
      - Secure credential handling
      - Token-based authentication
      - API key protection
  - Performance SLAs:
      - Response time < 1s for API calls
      - Error rate < 1%
  - Maintainability metrics:
      - Code documentation coverage > 80%
      - TypeScript strict mode compliance
      - ESLint rules adherence

architectural_principles:
  - Design patterns:
      - Factory pattern for API operations
      - Strategy pattern for authentication
      - Observer pattern for error handling
  - Code organisation:
      - Modular endpoint implementation
      - Shared utilities and interfaces
      - Clear separation of concerns
  - System architecture:
      - n8n node architecture compliance
      - REST API integration patterns
      - Error handling standardization
  - Integration patterns:
      - Standard HTTP client usage
      - Response transformation
      - Error mapping

development_standards:
  - Coding guidelines:
      - TypeScript best practices
      - n8n node development standards
      - Clean code principles
  - Documentation requirements:
      - JSDoc for all public methods
      - README with setup instructions
      - Usage examples for each endpoint
  - Testing standards:
      - Unit tests for business logic
      - Integration tests for API calls
      - Mock external dependencies
  - Performance criteria:
      - Minimize API calls
      - Efficient error handling
      - Resource cleanup
